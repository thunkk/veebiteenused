swagger: "2.0"
info:
  description: "This documentation describes VehicleLeasing's renting system's REST API. This documentation is internal and meant only for developers."
  version: "1.0.0"
  title: "Vehicle Leasing"
host: "localhost:8080"
basePath: "/LeaseService/webresources"
tags:
- name: "account"
  description: "Client account management"
- name: "vehicle"
  description: "Company vehicle management"
schemes:
- "http"
paths:
  /accounts:
    post:
      tags:
      - "account"
      summary: "Add a new account"
      description: ""
      operationId: "addAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "request-id"
        in: "query"
        description: "Request ID"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Account that needs to be added to the system"
        required: true
        schema:
          $ref: "#/definitions/AccountIn"
      responses:
        200:
          description: "success"
          schema:
            $ref: '#/definitions/Account'
      security:
      - api_key: []
    get:
      tags:
      - "account"
      summary: "List all accounts in system matching filter"
      description: "Any subset of the following parameters may be used to filter accounts"
      operationId: "getAccounts"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "customer-name"
        description: "Partial customer name"
        type: "string"
      - in: "query"
        name: "leases-vehicle"
        description: "Partial VIN of a leased vehicle"
        type: "string"
      - in: "query"
        name: "has-leases"
        description: "Whether or not the account has ever leased a vehicle"
        type: "boolean"
      responses:
        200:
          description: "success"
          schema:
            $ref: '#/definitions/AccountList'
      security:
      - api_key: []
  /accounts/{accountId}:
    get:
      tags:
      - "account"
      summary: "Get account by ID"
      operationId: "findPetsByStatus"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Account ID"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
      security:
      - api_key: []
  /accounts/{accountId}/vehicles:
    post:
      tags:
      - "account"
      summary: "Rent a vehicle to an account"
      operationId: "postAccountVehicles"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "request-id"
        in: "query"
        description: "Request ID"
        required: true
        type: "string"
      - name: "accountId"
        in: "path"
        description: "Account ID"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Lease data"
        required: true
        schema:
          $ref: "#/definitions/LeaseIn"
      responses:
        200:
          description: "successful operation"
      security:
      - api_key: []
    get:
      tags:
      - "account"
      summary: "Get vehicles which are rented to the account"
      description: ""
      operationId: "getAccountVehicles"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Account ID"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AccountVehicles"
      security:
      - api_key: []
  /vehicles:
    post:
      tags:
      - "vehicle"
      summary: "Add a new vehicle"
      description: ""
      operationId: "addVehicle"
      parameters:
        - name: "request-id"
          in: "query"
          description: "Request ID"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Vehicle that needs to be added to the system"
          required: true
          schema:
            $ref: "#/definitions/VehicleIn"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Vehicle"
      security:
      - api_key: []
    get:
      tags:
      - "vehicle"
      summary: "List all vehicles in system"
      operationId: "getVehicles"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/VehicleList"
      security:
      - api_key: []
  /vehicles/{vin}:
    get:
      tags:
      - "vehicle"
      summary: "Get vehicle by VIN"
      operationId: "getVehicle"
      produces:
      - "application/json"
      parameters:
      - name: "vin"
        in: "path"
        description: "VIN, 17 alphanumeric symbols"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Vehicle"
      security:
      - api_key: []
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "token"
    in: "query"
definitions:
  AccountIn:
    type: "object"
    properties:
      customerName:
        type: "string"
  Account:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "BigInt"
      createdAt:
        type: "integer"
        format: "UNIX"
      customerName:
        type: "string"
  AccountList:
    type: "object"
    properties:
      account:
        type: "array"
        items:
          $ref: "#/definitions/Account"
  VehicleIn:
    type: "object"
    properties:
      vin:
        type: "string"
        format: "[A-Z0-9]{17}"
      licensePlate:
        type: "string"
      type:
        type: "string"
      brand:
        type: "string"
      model:
        type: "string"
      acquiredAt:
        type: "string"
        format: "YYYY-MM-DD"
  Vehicle:
    type: "object"
    properties:
      vin:
        type: "string"
        format: "[A-Z0-9]{17}"
      licensePlate:
        type: "string"
      type:
        type: "string"
      brand:
        type: "string"
      model:
        type: "string"
      acquiredAt:
        type: "integer"
        format: "UNIX"
      soldAt:
        type: "integer"
        format: "UNIX"
  VehicleList:
    type: "object"
    properties:
      vehicle:
        type: "array"
        items:
          $ref: "#/definitions/Vehicle"
  Lease:
    type: "object"
    properties:
      vehicle:
        $ref: "#/definitions/Vehicle"
      leasePerMonth:
        type: "number"
      leaseStart:
        type: "integer"
        format: "UNIX"
      leaseEnd:
        type: "integer"
        format: "UNIX"
  LeaseIn:
    type: "object"
    properties:
      vin:
       type: "string"
       format: "[A-Z0-9]{17}"
      leasePerMonth:
        type: "number"
      leaseStart:
        type: "string"
        format: "YYYY-MM-DD"
      leaseEnd:
        type: "string"
        format: "YYYY-MM-DD"
  AccountVehicles:
    type: "object"
    properties:
      accountVehicle:
        type: "array"
        items:
          $ref: "#/definitions/Lease"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
